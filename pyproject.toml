[tool.poetry]
name = "tdc-transformation-2021"
version = "0.1.0"
description = "An example of ASGI Application in Python for TDC Transformation 2021"
authors = ["Jo√£o Filipe Storarri <13003392+flpStrri@users.noreply.github.com>"]

[tool.poe.tasks]
test = { "shell" = 'docker-compose up -d dynamodb-local && PYTHONPATH="$POE_ROOT:$POE_ROOT/src" pytest --cov=src --no-cov-on-fail --cov-report= --cov-fail-under=99 tests'}
lint = [
    { cmd = "black . --check" },
    { cmd = "isort . --check" },
]
runserver = { "shell" = 'docker compose down && docker compose up --build --remove-orphans'}
load = { "shell" = 'k6 run k6/test_script.js'}

[tool.poetry.dependencies]
python = "~3.8"
pydantic = "^1.8.2"
uvicorn = "^0.15.0"
fastapi = "^0.68.0"
aiodynamo = "^21.7"
yarl = "^1.6.3"
bcrypt = "^3.2.0"
aiohttp = "^3.7.4"
gunicorn = "^20.1.0"

[tool.poetry.dev-dependencies]
poethepoet = "^0.10.0"
isort = "^5.9.3"
black = "^21.7b0"
httpx = "^0.19.0"
pytest = "^6.2.4"
pytest-xdist = "^2.3.0"
pytest-aiohttp = "^0.3.0"
pytest-asyncio = "^0.15.1"
pytest-cov = "^2.12.1"
pytest-env = "^0.6.2"
pytest-randomly = "^3.8.0"
Faker = "^16.8.1"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.black]
line_length = 100

[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning"
addopts = "-v"
env = [
    "D:AWS_REGION=us-east-1",
    "D:DYNAMODB_URL=http://localhost:8000",
    "D:AWS_ACCESS_KEY_ID=local-key",
    "D:AWS_SECRET_ACCESS_KEY=local-secret",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
